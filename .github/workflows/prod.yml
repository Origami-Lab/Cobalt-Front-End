name: production
on: 
  workflow_dispatch
jobs:
  deploy:
    environment:
      name: prod
    name: Build and deploy
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1-node16
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION}}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build and Push images
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: ${{ secrets.AWS_REPO_NAME }}
          IMAGE_TAG: fe
        run: |
          docker build -f Dockerfile.prod -t $IMAGE_TAG:latest .
          docker tag $IMAGE_TAG:latest $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

      - name: Deploy
        uses: peymanmortazavi/eks-helm-deploy@v2.2.1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION}}
          cluster-name: cobalt
          config-files: ./helm/values.prod.yaml
          namespace: cobalt
          name: cobalt-front-end
          chart-path: ./helm

      - name: Restart Deployment
        uses: kodermax/kubectl-aws-eks@master
        env:
          KUBE_CONFIG_DATA: ${{ secrets.AWS_KUBE_CONFIG }}
        with:
          args: rollout restart deployment/cobalt-front-end -n cobalt